version: '3.8'

services:
  qyx-explorer:
    image: qyx-explorer:latest
    build:
      context: .
      dockerfile: contrib/Dockerfile
    container_name: qyx-explorer
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "50001:50001"    # Electrum server
    volumes:
      - qyx_blockchain_data:/data
      - qyx_explorer_logs:/var/log
      - ./ssl-certs:/ssl-certs:ro  # SSL certificates (optional)
    environment:
      # Basic Configuration
      - CANONICAL_URL=https://explorer.quantumyield.com
      - SITE_TITLE=QYX Explorer
      - API_URL=http://qyx-node:8332/
      
      # Performance Settings
      - NO_PRECACHE=0
      - NO_ADDRESS_SEARCH=0
      - ENABLE_LIGHTMODE=0
      
      # Debug (set to 'verbose' for troubleshooting)
      - DEBUG=
      
      # Optional: Tor support
      # - ONION_URL=http://your-onion-address.onion
    command: >
      bash -c "/srv/explorer/run.sh qyx-mainnet explorer"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/blocks/tip/height"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - qyx-node
    networks:
      - qyx-network

  qyx-node:
    image: quantumyield/qyx-node:latest  # Replace with actual QYX node image
    container_name: qyx-node
    restart: unless-stopped
    ports:
      - "8332:8332"      # RPC port
      - "8333:8333"      # P2P port
    volumes:
      - qyx_node_data:/data
      - ./qyx-node.conf:/data/.qyx.conf:ro
    environment:
      - QYX_NETWORK=mainnet
    command: >
      qyxd -conf=/data/.qyx.conf -datadir=/data -printtoconsole
    networks:
      - qyx-network

  # Optional: Nginx reverse proxy for SSL termination
  nginx:
    image: nginx:alpine
    container_name: qyx-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl-certs:/ssl-certs:ro
      - qyx_explorer_logs:/var/log/nginx
    depends_on:
      - qyx-explorer
    networks:
      - qyx-network

  # Optional: Redis for caching
  redis:
    image: redis:alpine
    container_name: qyx-redis
    restart: unless-stopped
    volumes:
      - qyx_redis_data:/data
    networks:
      - qyx-network

volumes:
  qyx_blockchain_data:
    driver: local
  qyx_node_data:
    driver: local
  qyx_explorer_logs:
    driver: local
  qyx_redis_data:
    driver: local

networks:
  qyx-network:
    driver: bridge